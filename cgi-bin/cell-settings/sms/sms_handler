#!/bin/sh

# Send headers
echo "Content-type: application/json"
echo ""


# Function to urldecode parameters
urldecode() {
    echo "$1" | sed 's/+/ /g;s/%\([0-9A-F][0-9A-F]\)/\\\\\x\1/g' | xargs echo -e
}

# Function to parse query string
parse_query() {
    if [ "$REQUEST_METHOD" = "POST" ]; then
        read -n $CONTENT_LENGTH POST_DATA
        QUERY_STRING=$POST_DATA
    fi
    
    echo "$QUERY_STRING" | tr '&' '\n' | \
    while read param; do
        key=$(echo "$param" | cut -d= -f1)
        value=$(echo "$param" | cut -d= -f2)
        eval "$key='$(urldecode "$value")'"
    done
}

# Function to send JSON error response
send_error() {
    echo "{"
    echo "  \"status\": \"error\","
    echo "  \"message\": \"$1\""
    echo "}"
    exit 1
}

# Parse query parameters
parse_query

# Get the action from query parameters
action=${action:-}

case "$action" in
    "recv")
        # Get all received SMS
        output=$(sms_tool recv 2>&1)
        if [ $? -eq 0 ]; then
            # Convert the output to JSON format
            echo "{"
            echo "  \"status\": \"success\","
            echo "  \"messages\": ["
            echo "$output" | awk 'BEGIN{ORS=""} 
                NR>1 {
                    if (NF >= 4) {
                        if (NR>2) print ","
                        print "{\n"
                        print "  \"index\": \"" $1 "\",\n"
                        print "  \"timestamp\": \"" $2 " " $3 "\",\n"
                        print "  \"sender\": \"" $4 "\",\n"
                        $1=$2=$3=$4=""
                        print "  \"message\": \"" substr($0,5) "\"\n"
                        print "}"
                    }
                }
                END{print "\n"]"}'
            echo "}"
        else
            send_error "Failed to receive messages: $output"
        fi
        ;;
        
    "delete")
        msg_index=${msg_index:-}
        if [ -z "$msg_index" ]; then
            send_error "Message index required"
        fi
        
        output=$(sms_tool delete "$msg_index" 2>&1)
        if [ $? -eq 0 ]; then
            echo "{"
            echo "  \"status\": \"success\","
            echo "  \"message\": \"Message(s) deleted successfully\""
            echo "}"
        else
            send_error "Failed to delete message(s): $output"
        fi
        ;;
        
    "send")
        phone=${phone:-}
        message=${message:-}
        
        if [ -z "$phone" ] || [ -z "$message" ]; then
            send_error "Phone number and message required"
        fi
        
        output=$(sms_tool send "$phone" "$message" 2>&1)
        if [ $? -eq 0 ]; then
            echo "{"
            echo "  \"status\": \"success\","
            echo "  \"message\": \"SMS sent successfully\""
            echo "}"
        else
            send_error "Failed to send SMS: $output"
        fi
        ;;
        
    *)
        send_error "Invalid action. Use 'recv', 'delete', or 'send'"
        ;;
esac